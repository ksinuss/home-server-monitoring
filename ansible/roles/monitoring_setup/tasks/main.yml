---
- name: Install dependencies
  apt:
    name:
      - wget
      - gnupg
      - software-properties-common
    state: present

- name: Set actual version for 'latest'
  block:
    - name: Get latest Prometheus version
      uri:
        url: "https://api.github.com/repos/prometheus/prometheus/releases/latest"
        return_content: yes
      register: prometheus_release
      when: prometheus_version == 'latest'

    - name: Extract latest version tag
      set_fact:
        prometheus_version: "{{ prometheus_release.json.tag_name | default(prometheus_version) | regex_replace('^v', '') }}"
      when: prometheus_version == 'latest'
  
  when: prometheus_version == 'latest'

- name: Download Prometheus
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/prometheus.tar.gz
    checksum: "sha256:{{ prometheus_checksum }}" if prometheus_checksum else omit

- name: Extract Prometheus
  unarchive:
    src: /tmp/prometheus.tar.gz
    dest: /opt
    remote_src: yes

- name: Create Prometheus symlink
  file:
    src: "/opt/prometheus-{{ prometheus_version }}.linux-amd64"
    dest: /opt/prometheus
    state: link

- name: Create data directory
  file:
    path: "{{ prometheus_data_dir }}"
    state: directory
    owner: prometheus
    group: prometheus

- name: Install Prometheus systemd service
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify: Reload systemd

- name: Add Grafana repository
  apt_repository:
    repo: "deb https://packages.grafana.com/oss/deb stable main"
    state: present
    filename: grafana

- name: Install Grafana
  apt:
    name: "grafana{{ '=' + grafana_version if grafana_version else '' }}"
    state: present
    update_cache: yes

- name: Start and enable services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - prometheus
    - grafana-server
